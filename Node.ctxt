#BlueJ class context
comment0.params=id\ type
comment0.target=Node(int,\ NodeType)
comment1.params=
comment1.target=Node\ copyWithoutConnections()
comment1.text=public\ Node\ copy(){//what\ about\ recurrent\ connections?\r\n\ \ \ \ \ \ \ \ Node\ copy\ \=\ new\ Node(id,\ type);\r\n\ \ \ \ \ \ \ \ for\ (Connection\ c\ \:\ inputs){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Node\ in\ \=\ c.in.copy();\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Connection\ connectionCopy\ \=\ new\ Connection(in,\ copy,\ c.weight,\ c.enabled,\ c.innovation);\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ connectionCopy.recurrent\ \=\ c.recurrent;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ copy.addInput(connectionCopy);\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ return\ copy;\r\n}
comment10.params=
comment10.target=void\ updateAncestors()
comment11.params=input
comment11.target=float\ activation(float)
comment12.params=x
comment12.target=float\ sigmoid(float)
comment13.params=n
comment13.target=boolean\ equals(Node)
comment14.params=n
comment14.target=boolean\ hasAncestor(Node)
comment2.params=c
comment2.target=void\ addInput(Connection)
comment3.params=c
comment3.target=void\ removeInput(Connection)
comment4.params=
comment4.target=java.util.List\ getInputs()
comment5.params=
comment5.target=NodeType\ getType()
comment6.params=
comment6.target=float\ output()
comment7.params=
comment7.target=float\ lastOutput()
comment8.params=
comment8.target=void\ calculateInputOutput()
comment9.params=
comment9.target=void\ update()
numComments=15
