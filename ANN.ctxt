#BlueJ class context
comment0.params=numOfInputs\ numOfOutputs
comment0.target=ANN(int,\ int)
comment1.params=nodes\ connections
comment1.target=ANN(java.util.List,\ java.util.List)
comment10.params=connections\ innov
comment10.target=Connection\ getConnectionWithInnov(java.util.List,\ int)
comment11.params=nodes\ id
comment11.target=boolean\ containsNodeWithId(java.util.List,\ int)
comment12.params=nodes\ id
comment12.target=Node\ getNodeWithId(java.util.List,\ int)
comment13.params=inputs
comment13.target=float[]\ step(float[])
comment14.params=id
comment14.target=Node\ getNode(int)
comment15.params=n\ id
comment15.target=Node\ getNode(Node,\ int)
comment16.params=c
comment16.target=boolean\ validToAdd(Connection)
comment17.params=c
comment17.target=void\ addConnection(Connection)
comment18.params=disable\ n
comment18.target=void\ addNode(Connection,\ Node)
comment19.params=
comment19.target=int[]\ getInnovationNumbers()
comment2.params=
comment2.target=void\ addRandomNode()
comment20.params=a\ b
comment20.target=boolean\ similar(ANN,\ ANN)
comment3.params=weight\ enabled
comment3.target=boolean\ addRandomConnection(float,\ boolean)
comment4.params=
comment4.target=ANN\ copy()
comment5.params=
comment5.target=java.util.List\ getNodes()
comment6.params=nodes\ n
comment6.target=void\ addNodes(java.util.List,\ Node)
comment7.params=
comment7.target=java.util.List\ getConnections()
comment8.params=connections\ n
comment8.target=void\ addConnections(java.util.List,\ Node)
comment9.params=connections\ innov
comment9.target=boolean\ containsConnectionWithInnov(java.util.List,\ int)
numComments=21
